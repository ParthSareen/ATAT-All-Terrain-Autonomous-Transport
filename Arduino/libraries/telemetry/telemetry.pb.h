/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.6-dev */

#ifndef PB_PB_TELEMETRY_PB_H_INCLUDED
#define PB_PB_TELEMETRY_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
typedef enum _pb_TelemetryEvent_Telemetry_Command { 
    pb_TelemetryEvent_Telemetry_Command_CMD_ULTRASONIC = 0, 
    pb_TelemetryEvent_Telemetry_Command_CMD_ACCELERATION = 1, 
    pb_TelemetryEvent_Telemetry_Command_CMD_GYRO = 2, 
    pb_TelemetryEvent_Telemetry_Command_CMD_LOCATION = 3, 
    pb_TelemetryEvent_Telemetry_Command_CMD_MOTOR_SPEED = 4, 
    pb_TelemetryEvent_Telemetry_Command_CMD_ENCODER = 5, 
    pb_TelemetryEvent_Telemetry_Command_CMD_ORIENTATION = 6, 
    pb_TelemetryEvent_Telemetry_Command_CMD_SHUTDOWN = 7, 
    pb_TelemetryEvent_Telemetry_Command_CMD_READ_DATA = 8 
} pb_TelemetryEvent_Telemetry_Command;

typedef enum _pb_TelemetryEvent_Motor_Speed { 
    pb_TelemetryEvent_Motor_Speed_STOPPED = 0, 
    pb_TelemetryEvent_Motor_Speed_ACCELERATION = 1, 
    pb_TelemetryEvent_Motor_Speed_CONST_SPEED = 2, 
    pb_TelemetryEvent_Motor_Speed_TURNING = 3 
} pb_TelemetryEvent_Motor_Speed;

typedef enum _pb_TelemetryEvent_Orientation { 
    pb_TelemetryEvent_Orientation_UP = 0, 
    pb_TelemetryEvent_Orientation_RIGHT = 1, 
    pb_TelemetryEvent_Orientation_DOWN = 2, 
    pb_TelemetryEvent_Orientation_LEFT = 3 
} pb_TelemetryEvent_Orientation;

/* Struct definitions */
typedef struct _pb_TelemetryEvent_Telemetry_Accel { 
    float accel_x; 
    float accel_y; 
    float accel_z; 
} pb_TelemetryEvent_Telemetry_Accel;

typedef struct _pb_TelemetryEvent_Telemetry_Encoder { 
    float leftMotor; 
    float rightMotor; 
} pb_TelemetryEvent_Telemetry_Encoder;

typedef struct _pb_TelemetryEvent_Telemetry_Gyro { 
    float gyro_x; 
    float gyro_y; 
    float gyro_z; 
} pb_TelemetryEvent_Telemetry_Gyro;

typedef struct _pb_TelemetryEvent_Telemetry_Location { 
    uint32_t rows; 
    uint32_t cols; 
    pb_callback_t data; 
} pb_TelemetryEvent_Telemetry_Location;

typedef struct _pb_TelemetryEvent_Telemetry_Motor_Speed { 
    pb_TelemetryEvent_Motor_Speed motorSpeed; 
} pb_TelemetryEvent_Telemetry_Motor_Speed;

typedef struct _pb_TelemetryEvent_Telemetry_Orientation { 
    pb_TelemetryEvent_Orientation orientation; 
} pb_TelemetryEvent_Telemetry_Orientation;

typedef struct _pb_TelemetryEvent_Telemetry_Ultrasonic { 
    float us_front; 
    float us_left; 
    float us_back; 
} pb_TelemetryEvent_Telemetry_Ultrasonic;

typedef struct _pb_TelemetryEvent { 
    bool has_tel_us;
    pb_TelemetryEvent_Telemetry_Ultrasonic tel_us; 
    bool has_tel_acc;
    pb_TelemetryEvent_Telemetry_Accel tel_acc; 
    bool has_tel_gyro;
    pb_TelemetryEvent_Telemetry_Gyro tel_gyro; 
    bool has_tel_enc;
    pb_TelemetryEvent_Telemetry_Encoder tel_enc; 
    bool has_tel_loc;
    pb_TelemetryEvent_Telemetry_Location tel_loc; 
    bool has_tel_motor_speed;
    pb_TelemetryEvent_Telemetry_Motor_Speed tel_motor_speed; 
    bool has_tel_orientation;
    pb_TelemetryEvent_Telemetry_Orientation tel_orientation; 
    pb_TelemetryEvent_Telemetry_Command tel_cmd; 
    bool improper_shutdown; 
} pb_TelemetryEvent;


/* Helper constants for enums */
#define _pb_TelemetryEvent_Telemetry_Command_MIN pb_TelemetryEvent_Telemetry_Command_CMD_ULTRASONIC
#define _pb_TelemetryEvent_Telemetry_Command_MAX pb_TelemetryEvent_Telemetry_Command_CMD_READ_DATA
#define _pb_TelemetryEvent_Telemetry_Command_ARRAYSIZE ((pb_TelemetryEvent_Telemetry_Command)(pb_TelemetryEvent_Telemetry_Command_CMD_READ_DATA+1))

#define _pb_TelemetryEvent_Motor_Speed_MIN pb_TelemetryEvent_Motor_Speed_STOPPED
#define _pb_TelemetryEvent_Motor_Speed_MAX pb_TelemetryEvent_Motor_Speed_TURNING
#define _pb_TelemetryEvent_Motor_Speed_ARRAYSIZE ((pb_TelemetryEvent_Motor_Speed)(pb_TelemetryEvent_Motor_Speed_TURNING+1))

#define _pb_TelemetryEvent_Orientation_MIN pb_TelemetryEvent_Orientation_UP
#define _pb_TelemetryEvent_Orientation_MAX pb_TelemetryEvent_Orientation_LEFT
#define _pb_TelemetryEvent_Orientation_ARRAYSIZE ((pb_TelemetryEvent_Orientation)(pb_TelemetryEvent_Orientation_LEFT+1))


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define pb_TelemetryEvent_init_default           {false, pb_TelemetryEvent_Telemetry_Ultrasonic_init_default, false, pb_TelemetryEvent_Telemetry_Accel_init_default, false, pb_TelemetryEvent_Telemetry_Gyro_init_default, false, pb_TelemetryEvent_Telemetry_Encoder_init_default, false, pb_TelemetryEvent_Telemetry_Location_init_default, false, pb_TelemetryEvent_Telemetry_Motor_Speed_init_default, false, pb_TelemetryEvent_Telemetry_Orientation_init_default, _pb_TelemetryEvent_Telemetry_Command_MIN, 0}
#define pb_TelemetryEvent_Telemetry_Ultrasonic_init_default {0, 0, 0}
#define pb_TelemetryEvent_Telemetry_Accel_init_default {0, 0, 0}
#define pb_TelemetryEvent_Telemetry_Gyro_init_default {0, 0, 0}
#define pb_TelemetryEvent_Telemetry_Location_init_default {0, 0, {{NULL}, NULL}}
#define pb_TelemetryEvent_Telemetry_Motor_Speed_init_default {_pb_TelemetryEvent_Motor_Speed_MIN}
#define pb_TelemetryEvent_Telemetry_Encoder_init_default {0, 0}
#define pb_TelemetryEvent_Telemetry_Orientation_init_default {_pb_TelemetryEvent_Orientation_MIN}
#define pb_TelemetryEvent_init_zero              {false, pb_TelemetryEvent_Telemetry_Ultrasonic_init_zero, false, pb_TelemetryEvent_Telemetry_Accel_init_zero, false, pb_TelemetryEvent_Telemetry_Gyro_init_zero, false, pb_TelemetryEvent_Telemetry_Encoder_init_zero, false, pb_TelemetryEvent_Telemetry_Location_init_zero, false, pb_TelemetryEvent_Telemetry_Motor_Speed_init_zero, false, pb_TelemetryEvent_Telemetry_Orientation_init_zero, _pb_TelemetryEvent_Telemetry_Command_MIN, 0}
#define pb_TelemetryEvent_Telemetry_Ultrasonic_init_zero {0, 0, 0}
#define pb_TelemetryEvent_Telemetry_Accel_init_zero {0, 0, 0}
#define pb_TelemetryEvent_Telemetry_Gyro_init_zero {0, 0, 0}
#define pb_TelemetryEvent_Telemetry_Location_init_zero {0, 0, {{NULL}, NULL}}
#define pb_TelemetryEvent_Telemetry_Motor_Speed_init_zero {_pb_TelemetryEvent_Motor_Speed_MIN}
#define pb_TelemetryEvent_Telemetry_Encoder_init_zero {0, 0}
#define pb_TelemetryEvent_Telemetry_Orientation_init_zero {_pb_TelemetryEvent_Orientation_MIN}

/* Field tags (for use in manual encoding/decoding) */
#define pb_TelemetryEvent_Telemetry_Accel_accel_x_tag 1
#define pb_TelemetryEvent_Telemetry_Accel_accel_y_tag 2
#define pb_TelemetryEvent_Telemetry_Accel_accel_z_tag 3
#define pb_TelemetryEvent_Telemetry_Encoder_leftMotor_tag 1
#define pb_TelemetryEvent_Telemetry_Encoder_rightMotor_tag 2
#define pb_TelemetryEvent_Telemetry_Gyro_gyro_x_tag 1
#define pb_TelemetryEvent_Telemetry_Gyro_gyro_y_tag 2
#define pb_TelemetryEvent_Telemetry_Gyro_gyro_z_tag 3
#define pb_TelemetryEvent_Telemetry_Location_rows_tag 1
#define pb_TelemetryEvent_Telemetry_Location_cols_tag 2
#define pb_TelemetryEvent_Telemetry_Location_data_tag 3
#define pb_TelemetryEvent_Telemetry_Motor_Speed_motorSpeed_tag 1
#define pb_TelemetryEvent_Telemetry_Orientation_orientation_tag 1
#define pb_TelemetryEvent_Telemetry_Ultrasonic_us_front_tag 1
#define pb_TelemetryEvent_Telemetry_Ultrasonic_us_left_tag 2
#define pb_TelemetryEvent_Telemetry_Ultrasonic_us_back_tag 3
#define pb_TelemetryEvent_tel_us_tag             1
#define pb_TelemetryEvent_tel_acc_tag            2
#define pb_TelemetryEvent_tel_gyro_tag           3
#define pb_TelemetryEvent_tel_enc_tag            4
#define pb_TelemetryEvent_tel_loc_tag            5
#define pb_TelemetryEvent_tel_motor_speed_tag    6
#define pb_TelemetryEvent_tel_orientation_tag    7
#define pb_TelemetryEvent_tel_cmd_tag            8
#define pb_TelemetryEvent_improper_shutdown_tag  9

/* Struct field encoding specification for nanopb */
#define pb_TelemetryEvent_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  tel_us,            1) \
X(a, STATIC,   OPTIONAL, MESSAGE,  tel_acc,           2) \
X(a, STATIC,   OPTIONAL, MESSAGE,  tel_gyro,          3) \
X(a, STATIC,   OPTIONAL, MESSAGE,  tel_enc,           4) \
X(a, STATIC,   OPTIONAL, MESSAGE,  tel_loc,           5) \
X(a, STATIC,   OPTIONAL, MESSAGE,  tel_motor_speed,   6) \
X(a, STATIC,   OPTIONAL, MESSAGE,  tel_orientation,   7) \
X(a, STATIC,   SINGULAR, UENUM,    tel_cmd,           8) \
X(a, STATIC,   SINGULAR, BOOL,     improper_shutdown,   9)
#define pb_TelemetryEvent_CALLBACK NULL
#define pb_TelemetryEvent_DEFAULT NULL
#define pb_TelemetryEvent_tel_us_MSGTYPE pb_TelemetryEvent_Telemetry_Ultrasonic
#define pb_TelemetryEvent_tel_acc_MSGTYPE pb_TelemetryEvent_Telemetry_Accel
#define pb_TelemetryEvent_tel_gyro_MSGTYPE pb_TelemetryEvent_Telemetry_Gyro
#define pb_TelemetryEvent_tel_enc_MSGTYPE pb_TelemetryEvent_Telemetry_Encoder
#define pb_TelemetryEvent_tel_loc_MSGTYPE pb_TelemetryEvent_Telemetry_Location
#define pb_TelemetryEvent_tel_motor_speed_MSGTYPE pb_TelemetryEvent_Telemetry_Motor_Speed
#define pb_TelemetryEvent_tel_orientation_MSGTYPE pb_TelemetryEvent_Telemetry_Orientation

#define pb_TelemetryEvent_Telemetry_Ultrasonic_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, FLOAT,    us_front,          1) \
X(a, STATIC,   SINGULAR, FLOAT,    us_left,           2) \
X(a, STATIC,   SINGULAR, FLOAT,    us_back,           3)
#define pb_TelemetryEvent_Telemetry_Ultrasonic_CALLBACK NULL
#define pb_TelemetryEvent_Telemetry_Ultrasonic_DEFAULT NULL

#define pb_TelemetryEvent_Telemetry_Accel_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, FLOAT,    accel_x,           1) \
X(a, STATIC,   SINGULAR, FLOAT,    accel_y,           2) \
X(a, STATIC,   SINGULAR, FLOAT,    accel_z,           3)
#define pb_TelemetryEvent_Telemetry_Accel_CALLBACK NULL
#define pb_TelemetryEvent_Telemetry_Accel_DEFAULT NULL

#define pb_TelemetryEvent_Telemetry_Gyro_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, FLOAT,    gyro_x,            1) \
X(a, STATIC,   SINGULAR, FLOAT,    gyro_y,            2) \
X(a, STATIC,   SINGULAR, FLOAT,    gyro_z,            3)
#define pb_TelemetryEvent_Telemetry_Gyro_CALLBACK NULL
#define pb_TelemetryEvent_Telemetry_Gyro_DEFAULT NULL

#define pb_TelemetryEvent_Telemetry_Location_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   rows,              1) \
X(a, STATIC,   SINGULAR, UINT32,   cols,              2) \
X(a, CALLBACK, REPEATED, INT32,    data,              3)
#define pb_TelemetryEvent_Telemetry_Location_CALLBACK pb_default_field_callback
#define pb_TelemetryEvent_Telemetry_Location_DEFAULT NULL

#define pb_TelemetryEvent_Telemetry_Motor_Speed_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    motorSpeed,        1)
#define pb_TelemetryEvent_Telemetry_Motor_Speed_CALLBACK NULL
#define pb_TelemetryEvent_Telemetry_Motor_Speed_DEFAULT NULL

#define pb_TelemetryEvent_Telemetry_Encoder_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, FLOAT,    leftMotor,         1) \
X(a, STATIC,   SINGULAR, FLOAT,    rightMotor,        2)
#define pb_TelemetryEvent_Telemetry_Encoder_CALLBACK NULL
#define pb_TelemetryEvent_Telemetry_Encoder_DEFAULT NULL

#define pb_TelemetryEvent_Telemetry_Orientation_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    orientation,       1)
#define pb_TelemetryEvent_Telemetry_Orientation_CALLBACK NULL
#define pb_TelemetryEvent_Telemetry_Orientation_DEFAULT NULL

extern const pb_msgdesc_t pb_TelemetryEvent_msg;
extern const pb_msgdesc_t pb_TelemetryEvent_Telemetry_Ultrasonic_msg;
extern const pb_msgdesc_t pb_TelemetryEvent_Telemetry_Accel_msg;
extern const pb_msgdesc_t pb_TelemetryEvent_Telemetry_Gyro_msg;
extern const pb_msgdesc_t pb_TelemetryEvent_Telemetry_Location_msg;
extern const pb_msgdesc_t pb_TelemetryEvent_Telemetry_Motor_Speed_msg;
extern const pb_msgdesc_t pb_TelemetryEvent_Telemetry_Encoder_msg;
extern const pb_msgdesc_t pb_TelemetryEvent_Telemetry_Orientation_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define pb_TelemetryEvent_fields &pb_TelemetryEvent_msg
#define pb_TelemetryEvent_Telemetry_Ultrasonic_fields &pb_TelemetryEvent_Telemetry_Ultrasonic_msg
#define pb_TelemetryEvent_Telemetry_Accel_fields &pb_TelemetryEvent_Telemetry_Accel_msg
#define pb_TelemetryEvent_Telemetry_Gyro_fields &pb_TelemetryEvent_Telemetry_Gyro_msg
#define pb_TelemetryEvent_Telemetry_Location_fields &pb_TelemetryEvent_Telemetry_Location_msg
#define pb_TelemetryEvent_Telemetry_Motor_Speed_fields &pb_TelemetryEvent_Telemetry_Motor_Speed_msg
#define pb_TelemetryEvent_Telemetry_Encoder_fields &pb_TelemetryEvent_Telemetry_Encoder_msg
#define pb_TelemetryEvent_Telemetry_Orientation_fields &pb_TelemetryEvent_Telemetry_Orientation_msg

/* Maximum encoded size of messages (where known) */
/* pb_TelemetryEvent_size depends on runtime parameters */
/* pb_TelemetryEvent_Telemetry_Location_size depends on runtime parameters */
#define pb_TelemetryEvent_Telemetry_Accel_size   15
#define pb_TelemetryEvent_Telemetry_Encoder_size 10
#define pb_TelemetryEvent_Telemetry_Gyro_size    15
#define pb_TelemetryEvent_Telemetry_Motor_Speed_size 2
#define pb_TelemetryEvent_Telemetry_Orientation_size 2
#define pb_TelemetryEvent_Telemetry_Ultrasonic_size 15

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
